# COPY-PASTED FOR NOW
@panel_width_minus_10 = 530			# used to be 450
@panel_width = 540  				# used to be 460
@panel_width_half = 270				# used to be 230
@panel_width_plus_10 = 550  		# used to be 470
@panel_width_plus_14 = 554			# used to be 474
@panel_width_plus_14_half = 277		# used to be 237
@panel_width_plus_20 = 560			# used to be 480
@panel_width_plus_30 = 570			# used to be 490
@panel_width_plus_70 = 610			# used to be 530

@diplo_play_side_width = 250

types com_diplomatic_play_panel_types_overwrite {
	
	### DIPLO PLAY SIDE
	type diplo_play_side = flowcontainer {
		direction = vertical
		block "datacontext" {
			datacontext = "[DiplomaticPlay.GetInitiator]"
			datacontext = "[DiplomaticPlay.AccessInitiator]"
		}
		block "parentanchor" {}

		### TOTAL MOBILIZED
		flowcontainer = {
			margin = { 5 10 }
			direction = vertical
			block "parentanchor" {}
			minimumsize = { @diplo_play_side_width -1 }
			spacing = 2		
			
			textbox = {
				block "parentanchor" {}
				autoresize = yes
				text = "DIPLO_PLAY_TOTAL_MOBILIZED"
				align = nobaseline
				default_format = "#title"
			}
			
			flowcontainer = {
				spacing = 5

				block "parentanchor" {}

				flowcontainer = {				
					tooltip = "DIPLO_PLAY_TOTAL_MOBILIZED_BATTALIONS_BREAKDOWN"
					
					icon = {
						size = { 25 25 }
						texture = "gfx/interface/icons/generic_icons/battalions.dds"
						parentanchor = vcenter
					}

					textbox = {
						autoresize = yes
						text = "[DiplomaticPlay.GetTotalNumMobilizedBattalionsForSide( Country.Self )|v]"
						align = nobaseline
						using = fontsize_xxl
						parentanchor = vcenter
					}
				}
				
				widget = { size = { 10 0 }}

				flowcontainer = {
					spacing = 5
					tooltip = "DIPLO_PLAY_TOTAL_FLOTILLAS_BREAKDOWN"
					
					icon = {
						size = { 25 25 }
						texture = "gfx/interface/icons/generic_icons/flotillas.dds"
						parentanchor = vcenter
					}

					textbox = {
						autoresize = yes
						text = "[DiplomaticPlay.GetTotalNumWarshipsForSide( Country.Self )|v]"
						align = nobaseline
						using = fontsize_xxl
						parentanchor = vcenter
					}
				}
			}
		}
		
		divider_clean = {}
		
		widget = { size = { 10 10 }}
		
		### HEADER
		flowcontainer = {
			margin = { 5 0 }
			block "parentanchor" {}
			spacing = 5
			
			textbox = {
				autoresize = yes
				using = fontsize_xxl
				block "header_text" {
					text = "DIPLO_PLAY_INITIATOR"
				}
				align = nobaseline
				default_format = "#title"
			}						
			textbox = {
				block "side_visible_property" {
					visible = "[DiplomaticPlay.IsInitiator(GetPlayer.Self)]"
				}
				autoresize = yes
				using = fontsize_large
				text = "DIPLO_PLAY_YOU"
				align = nobaseline
				parentanchor = vcenter
			}
		}

		### CONFIDENCE
		flowcontainer = {
			margin = { 5 0 }
			block "parentanchor" {}
			spacing = 5
			block "confidence_tooltip" {
				tooltip = "[DiplomaticPlay.GetConfidenceDesc(DiplomaticPlay.GetInitiator)]"
			}
			
			textbox = {
				autoresize = yes
				using = fontsize_large
				block "confidence_text" {
					text = "[DiplomaticPlay.GetConfidenceLabel(DiplomaticPlay.GetInitiator)]"
				}
				align = nobaseline
			}	
		}		
		
		### MANEUVERS
		flowcontainer = {
			margin = { 5 0 }
			block "parentanchor" {}
			spacing = 3
			block "maneuvers_tooltip" {
				tooltip = com_diplo_remaining_maneuvers_initiator_tooltip
			}
			
			icon = {
				texture = "gfx/interface/icons/generic_icons/maneuvers.dds"
				size = { 28 28 }
				parentanchor = vcenter
			}
			textbox = {
				block "maneuvers_amount" {
					text = com_diplo_remaining_maneuvers_initiator
				}
				autoresize = yes
				align = nobaseline
				parentanchor = vcenter
				using = fontsize_large
			}
		}				
		
		### FLAG + TROOPS
		flowcontainer = {
			margin_top = 30
			margin_bottom = 10
			block "parentanchor" {}
			block "flowcontainers_direction" {}

			# flag
			container = {
				widget = {
					size = { 100% 100% }
					icon = {
						block "side_visible_property" {
							visible = "[DiplomaticPlay.IsInitiator(GetPlayer.Self)]"
						}
						parentanchor = center
						using = rotate_glow_animation_02
						size = { 220 220 }
					}
				}
				flowcontainer = {
					margin = { 5 0 }
					large_flag = {
						mobilization_icon_flag = {}
					}
				}
			}
			
			widget = { size = { 5 5 }}

			# troops
			container = {
				icon = {
					block "side_visible_not_property" {
						visible = "[Not(DiplomaticPlay.IsInitiator(GetPlayer.Self))]"
					}
					using = entry_bg
					size = { 100% 100% }
				}
				
				button = {
					block "side_visible_property" {
						visible = "[DiplomaticPlay.IsInitiator(GetPlayer.Self)]"
					}
					using = default_button
					size = { 100% 100% }
					parentanchor = vcenter
					onclick = "[InformationPanelBar.OpenPanel('military')]"
				}
				
				flowcontainer = {
					direction = vertical
					margin = { 10 3 }
					
					flowcontainer = {
						tooltip = "PANEL_MILITARY_ARMY_OVERVIEW_TOOLTIP"
						spacing = 5

						icon = {
							size = { 25 25 }
							texture = "gfx/interface/icons/generic_icons/battalions.dds"
							parentanchor = vcenter
						}

						textbox = {
							autoresize = yes
							minimumsize = { 40 30 }
							raw_text = "#v [Country.GetBattalions]#!"
							align = nobaseline
						}

						textbox = {
							autoresize = yes
							minimumsize = { 40 30 }
							raw_text = "(#v [Country.GetFullyMobilizedBattalionsPercentageRaw|0%]#!)"
							align = nobaseline
						}
					}
					
					flowcontainer = {
						tooltip = "PANEL_MILITARY_NAVY_CURRENT_FLOTILLAS_TOOLTIP"
						spacing = 5

						icon = {
							size = { 25 25 }
							texture = "gfx/interface/icons/generic_icons/flotillas.dds"
							parentanchor = vcenter
						}

						textbox = {
							autoresize = yes
							minimumsize = { 40 30 }
							raw_text = "#variable [Country.GetWarships]#!"
							align = nobaseline
						}
					}
				}
			}
		}
		
		divider_clean = {}
		
		### SUPPORTERS
		textbox = {
			block "parentanchor" {}
			block "datamodel_empty_supporters_not" {
				visible = "[Not(IsDataModelEmpty(DiplomaticPlay.AccessInitiatorBackers))]"
			}
			text = "DIPLO_PLAY_SUPPORTS"
			autoresize = yes
			align = nobaseline
			default_format = "#title"
			margin = { 5 0 }
			margin_top = 2
		}
		textbox = {
			block "datamodel_empty_supporters" {
				visible = "[IsDataModelEmpty(DiplomaticPlay.AccessInitiatorBackers)]"
			}
			block "parentanchor" {}
			text = "DIPLO_PLAY_NO_SUPPORTS"
			autoresize = yes
			align = hcenter|nobaseline
			using = empty_state_text_properties
			margin = { 5 0 }
			minimumsize = { @diplo_play_side_width 50 }
		}
		
		fixedgridbox = {
			addcolumn = 36
			addrow = 25
			datamodel_wrap = 7
			flipdirection = yes
			block "datamodel_supporters" {
				datamodel = "[DiplomaticPlay.AccessInitiatorBackers]"
			}
			block "parentanchor" {}

			item = {
				widget = {
					size = { 36 25 }
					
					icon = {
						visible = "[ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.MakeScope, Country.MakeScope)]"
						parentanchor = center
						using = rotate_glow_animation_02
						size = { 65 65 }
					}
					tiny_flag = {
						mobilization_icon_flag = {}
						parentanchor = center
					}
				}
			}
		}
		
		widget = { size = { 5 5 }}
		
		divider_clean = {}
		
		### WARGOALS
		flowcontainer = {
			margin_top = 2
			margin_bottom = 10
			direction = vertical
			spacing = 5
			block "parentanchor" {}
			
			textbox = {
				block "parentanchor" {}
				text = "WARGOALS"
				autoresize = yes
				align = nobaseline
				margin = { 5 0 }
				default_format = "#title"
			}

			add_wargoal_button = {
				block "side_visible_property" {
					visible = "[And(DiplomaticPlay.IsValidWarGoalDeclarer(GetPlayer.Self),DiplomaticPlay.IsInitiatorOrBacker(GetPlayer.Self))]"
				}
			}

			com_active_war_goal_list_primary = {}

			flowcontainer = {
				spacing = 2
				direction = vertical
				block "wargoal_datamodel" {
					datamodel = "[DiplomaticPlay.AccessInitiatorWarGoals]"
				}
				
				item = {
					flowcontainer = {
						margin = { 0 5 }
						margin_left = 10
						spacing = 3

						background = {
							using = entry_bg
							visible = "[WarGoal.IsPrimaryDemand]"
						}

						background = {
							using = entry_bg_simple
							visible = "[Not(WarGoal.IsPrimaryDemand)]"
							margin_left = 1
							margin_right = 1
						}


						minimumsize = { @diplo_play_side_width 40 }
						maximumsize = { @diplo_play_side_width -1 }
						tooltip = "WARGOAL_ACTIVE_TOOLTIP"
						onmousehierarchyenter = "[WarGoal.ShowHighlight]"
						onmousehierarchyleave = "[AccessHighlightManager.RemoveHighlight]"
						alwaystransparent = no
						direction = vertical

						flowcontainer = {
							spacing = 5
							icon = {
								size = { 28 28 }
								texture = "[WarGoal.GetTexture]"
								parentanchor = vcenter
							}
									
							textbox = {
								autoresize = yes
								minimumsize = { 200 -1 }
								maximumsize = { 200 -1 }
								raw_text = "#BOLD [WarGoal.GetName]#!"
								align = nobaseline
								parentanchor = vcenter
								multiline = yes
								margin_left = 5
							}
						}
						
						flowcontainer = {
							spacing = 5
							tiny_flag = {
								parentanchor = vcenter
								datacontext = "[WarGoal.GetHolder]"
							}
							
							button = {
								visible = "[And(Not(WarGoal.IsPrimaryDemand), WarGoal.GetCreator.IsLocalPlayer)]"
								using = default_button
								size = { 200 30 }
								text = "DIPLO_PLAY_MAKE_PRIMARY_DEMAND"
								tooltip = "DIPLO_PLAY_MAKE_PRIMARY_DEMAND_TOOLTIP"
								enabled = "[And(
												GreaterThanOrEqualTo_int32(
													Subtract_int32(
														DiplomaticPlay.GetNumManeuversRemaining(GetPlayer.Self),
														FixedPointToInt(DiplomaticPlay.MakeScope.Var('com_cost').GetValue)
													),
													WarGoal.CalcManeuversCostToAdd
												),
												IsValid(WarGoal.MakeWarGoalPrimaryDemand(GetPlayer.Self))
											)]"
								onclick = "[Execute(WarGoal.MakeWarGoalPrimaryDemand(GetPlayer.Self))]"
								parentanchor = vcenter
							}
							
							textbox = {
								size = { 200 30 }
								text = "[concept_primary_demand]"
								visible = "[WarGoal.IsPrimaryDemand]"
								align = nobaseline
								parentanchor = vcenter
								margin_left = 5
							}								
						}
					}
				}
			}

			com_active_war_goal_list = {}
		}
	}

	type com_active_war_goal_list = flowcontainer {
		spacing = 2
		direction = vertical
		datamodel = "[DiplomaticPlay.MakeScope.GetList('com_active_war_goals')]"
		datacontext = "[GetScriptedGui('com_make_custom_war_goal_primary')]"
		visible = "[And(DataModelHasItems(DiplomaticPlay.MakeScope.GetList('com_active_war_goals')), ObjectsEqual(GetPlayer.MakeScope, Country.MakeScope))]"

		item = {
			flowcontainer = {
				visible = "[ScriptedGui.IsShown(GuiScope
								.SetRoot(DiplomaticPlay.MakeScope)
								.AddScope('war_goal', BuildingType.MakeScope)
								.AddScope('target', DiplomaticPlay.GetTarget.MakeScope)
								.AddScope('initiator', DiplomaticPlay.GetInitiator.MakeScope)
								.End
							)]"
				datacontext = "[Scope.GetBuildingType]"
				margin = { 0 5 }
				margin_left = 10
				spacing = 3

				background = {
					using = entry_bg_simple
					margin_left = 1
					margin_right = 1
				}


				minimumsize = { @diplo_play_side_width 40 }
				maximumsize = { @diplo_play_side_width -1 }
				tooltip = com_war_goal_active_tooltip_secondary
				onmousehierarchyenter = "[WarGoal.ShowHighlight]"
				onmousehierarchyleave = "[AccessHighlightManager.RemoveHighlight]"
				alwaystransparent = no
				direction = vertical

				flowcontainer = {
					spacing = 5
					icon = {
						size = { 28 28 }
						texture = "[BuildingType.GetIcon]"
						parentanchor = vcenter
					}

					textbox = {
						autoresize = yes
						minimumsize = { 200 -1 }
						maximumsize = { 200 -1 }
						raw_text = "#BOLD [Localize('com_war_goal_name')]#!"
						align = nobaseline
						parentanchor = vcenter
						multiline = yes
						margin_left = 5
					}
				}

				flowcontainer = {
					spacing = 5
					tiny_flag = {
						parentanchor = vcenter
						datacontext = "[DiplomaticPlay.GetInitiator]"
					}

					button = {
						using = default_button
						size = { 200 30 }
						text = com_war_goal_make_primary_demand
						tooltip = com_war_goal_make_primary_demand_tooltip
						enabled = "[GreaterThanOrEqualTo_int32(Subtract_int32(DiplomaticPlay.GetNumManeuversRemaining(GetPlayer.Self), FixedPointToInt(DiplomaticPlay.MakeScope.Var('com_cost').GetValueWithDefault('(CFixedPoint)0'))), FixedPointToInt(DiplomaticPlay.MakeScope.ScriptValue(Concatenate(BuildingType.GetKey, '_cost_primary'))))]"
						onclick = "[ScriptedGui.Execute(GuiScope
										.SetRoot(DiplomaticPlay.MakeScope)
										.AddScope('war_goal', BuildingType.MakeScope)
										.AddScope('target', DiplomaticPlay.GetTarget.MakeScope)
										.AddScope('initiator', DiplomaticPlay.GetInitiator.MakeScope)
										.AddScope('infamy', MakeScopeValue(DiplomaticPlay.MakeScope.ScriptValue(Concatenate(BuildingType.GetKey, '_infamy_primary'))))
										.AddScope('cost', MakeScopeValue(DiplomaticPlay.MakeScope.ScriptValue(Concatenate(BuildingType.GetKey, '_cost_primary'))))
										.End
									)]"
						parentanchor = vcenter
					}
				}
			}
		}
	}

	type com_active_war_goal_list_primary = flowcontainer {
		spacing = 2
		direction = vertical
		datamodel = "[DiplomaticPlay.MakeScope.GetList('com_active_war_goals_primary')]"
		visible = "[And(DataModelHasItems(DiplomaticPlay.MakeScope.GetList('com_active_war_goals_primary')), ObjectsEqual(GetPlayer.MakeScope, Country.MakeScope))]"

		item = {
			flowcontainer = {
				datacontext = "[Scope.GetBuildingType]"
				margin = { 0 5 }
				margin_left = 10
				spacing = 3

				background = {
					using = entry_bg
				}

				minimumsize = { @diplo_play_side_width 40 }
				maximumsize = { @diplo_play_side_width -1 }
				tooltip = com_war_goal_active_tooltip_primary
				onmousehierarchyenter = "[WarGoal.ShowHighlight]"
				onmousehierarchyleave = "[AccessHighlightManager.RemoveHighlight]"
				alwaystransparent = no
				direction = vertical

				flowcontainer = {
					spacing = 5
					icon = {
						size = { 28 28 }
						texture = "[BuildingType.GetIcon]"
						parentanchor = vcenter
					}

					textbox = {
						autoresize = yes
						minimumsize = { 200 -1 }
						maximumsize = { 200 -1 }
						raw_text = "#BOLD [Localize('com_war_goal_name')]#!"
						align = nobaseline
						parentanchor = vcenter
						multiline = yes
						margin_left = 5
					}
				}

				flowcontainer = {
					spacing = 5
					tiny_flag = {
						parentanchor = vcenter
						datacontext = "[DiplomaticPlay.GetInitiator]"
					}

					textbox = {
						size = { 200 30 }
						text = "[concept_primary_demand]"
						align = nobaseline
						parentanchor = vcenter
						margin_left = 5
					}
				}
			}
		}
	}
}
